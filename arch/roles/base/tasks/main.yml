---
# all of the information we need is available in ansible_devices fact, but
# there are nasty nested lists and dictionaries to pull the information out
# with a nasty json_query, and just asking the blkid with the disk
# by-partlabel is much simpler and easier to understand
- name: Getting root volume disk UUID
  become: true
  ansible.builtin.command: >-
    blkid -s UUID -o value /dev/disk/by-partlabel/CRYPTROOT
  register: cryptroot_blkid
  changed_when: false
  failed_when: cryptroot_blkid.rc != 0

- name: Setting CRYPTROOT UUID as fact
  ansible.builtin.set_fact:
    cryptroot_uuid: "{{ cryptroot_blkid.stdout }}"

- name: Installing finellictl
  ansible.builtin.include_tasks: finellictl.yml

- name: Enabling NTP with systemd
  become: true
  when: mmode != 'setup'
  ansible.builtin.command: timedatectl set-ntp true
  register: timedatectl_setntp
  changed_when: timedatectl_setntp.rc == 0
  failed_when: timedatectl_setntp.rc != 0

- name: Setting system timezone
  become: true
  community.general.timezone:
    name: "{{ timezone }}"

- name: Installing baseline Archlinux system
  become: true
  community.general.pacman:
    name:
      - base
      - base-devel
      - dracut
      - dracut-hook-uefi
      - linux
      - linux-firmware
      - posix
      - sof-firmware
    state: present

# iptables is a dependency of systemd (part of base)
- name: Replacing "iptables" with "iptables-nft"
  become: true
  community.general.pacman:
    name: iptables-nft
    state: present

- name: Copying dracut kernel commandline configuration
  become: true
  ansible.builtin.template:
    dest: /etc/dracut.conf.d/cmdline.conf
    group: root
    mode: "0644"
    owner: root
    src: cmdline.conf.j2
  notify:
    - Run dracut

- name: Installing imagemagick # for bootsplash conversion
  become: true
  community.general.pacman:
    name: imagemagick
    state: present

- name: Copying (and converting) bootsplash image
  become: true
  ansible.builtin.command: >
    magick {{ playbook_dir }}/roles/base/files/bootsplash.png
    -background black -flatten /etc/finelli/bootsplash.bmp
  args:
    creates: /etc/finelli/bootsplash.bmp

- name: Copying custom dracut configuration
  become: true
  ansible.builtin.copy:
    dest: /etc/dracut.conf.d/custom.conf
    group: root
    mode: "0644"
    owner: root
    src: dracut.conf
  notify:
    - Run dracut

- name: Copying "/etc/locale.gen"
  become: true
  ansible.builtin.copy:
    dest: /etc/locale.gen
    group: root
    mode: "0644"
    owner: root
    src: locale.gen
  register: locales_list

- name: Running `locale-gen`
  when: locales_list.changed # noqa no-handler
  become: true
  ansible.builtin.command: locale-gen
  register: localegen
  changed_when: localegen.rc == 0
  failed_when: localegen.rc != 0

- name: Copying "/etc/locale.conf"
  become: true
  ansible.builtin.template:
    dest: /etc/locale.conf
    group: root
    mode: "0644"
    owner: root
    src: locale.conf.j2

- name: Installing bootstrap packages
  become: true
  when: mtype != 'server'
  community.general.pacman:
    name:
      - btrfs-progs
      - cryptsetup
      - dosfstools
      - e2fsprogs
      - efibootmgr
      - elfutils
      - exfat-utils
      - f2fs-tools
      - lvm2
      - mdadm
      - ntfs-3g
      - os-prober
      - usbutils
    state: present

- name: Installing video and input drivers
  become: true
  when: mtype != 'server'
  community.general.pacman:
    name:
      - mesa
      - xf86-input-libinput
    state: present

- name: Installing Intel microcode
  become: true
  when:
    - mtype != 'server'
    - "'GenuineIntel' in ansible_processor"
  community.general.pacman:
    name: intel-ucode
    state: present

- name: Installing AMD microcode
  become: true
  when:
    - mtype != 'server'
    - "'AuthenticAMD' in ansible_processor"
  community.general.pacman:
    name: amd-ucode
    state: present

- name: Enabling the systemd-boot updater
  when: mtype != 'server'
  ansible.builtin.systemd:
    enabled: true
    name: systemd-boot-update.service

- name: Copying sudo configuration
  become: true
  ansible.builtin.copy:
    dest: /etc/sudoers.d/gsudo
    group: root
    mode: "0440"
    owner: root
    src: sudoer
    validate: "visudo -cf %s"

- name: Configuring makepkg and pacman
  ansible.builtin.include_tasks: pacman.yml

- name: Installing ansible-gpg-key (from supermario repo)
  become: true
  community.general.pacman:
    name: ansible-gpg-key-git
    state: present

- name: Installing pikaur
  kewlfft.aur.aur:
    name: pikaur
    state: present

- name: Installing networking tools
  become: true
  when: mtype != 'server'
  community.general.pacman:
    name:
      - dialog
      - easy-rsa
      - iw
      - iwd
      - netctl
      - networkmanager
      - networkmanager-openvpn
      - wireless-regdb
      - wpa_supplicant
    state: present

- name: Installing inetutils # for `hostname`
  become: true
  community.general.pacman:
    name: inetutils
    state: present

- name: Copying wireless-regdom configuration
  become: true
  when: mtype != 'server'
  ansible.builtin.template:
    dest: /etc/conf.d/wireless-regdom
    group: root
    mode: "0644"
    owner: root
    src: wireless-regdom.j2

- name: Installing packages from old "base" group
  become: true
  community.general.pacman:
    name:
      - bash-completion
      - logrotate
      - man-db
      - man-pages
      - nano
      - perl
      - s-nail
      - texinfo
      - vi
    state: present

- name: Installing ansible and dependencies
  become: true
  community.general.pacman:
    name:
      - ansible
      - git
      - pyalpm
    state: present

- name: Installing optional ansible dependencies
  become: true
  community.general.pacman:
    name:
      - python-argcomplete
      - python-dnspython
      - python-jmespath
      - python-keyring
      - python-ldap
      - python-pip
      - python-pyopenssl
      - python-systemd
    state: present

- name: Install "everywhere" packages
  become: true
  community.general.pacman:
    name:
      - lynx
      - rsync
      - vim
      - vim-spell-en
      - vim-spell-es
      - vim-spell-fr
      - vim-spell-it
      - wget
    state: present

- name: Uninstalling packages
  become: true
  community.general.pacman:
    name:
      - ansible-aur
      - python-py-cpuinfo
      - xf86-video-amdgpu
      - xf86-video-ati
      - xf86-video-intel
      - xf86-video-vesa
    state: absent
