#!/bin/bash

set -ex

# default timezone to UTC
hwclock --systohc --utc
timedatectl set-timezone UTC

# Set default language to US english
sed -i "/#en_US.UTF-8 UTF-8/cen_US.UTF-8 UTF-8" /etc/locale.gen
locale-gen
echo "LANG=en_US.UTF-8" > /etc/locale.conf

# use a known good mirror for initial package installation - we'll generate a
# new mirrorlist shortly
# shellcheck disable=SC2016
MIRROR='Server = https://mirrors.kernel.org/archlinux/$repo/os/$arch'
echo "$MIRROR" > /etc/pacman.d/mirrorlist

# add the supermario repo and then refresh - we'll set it "correctly" once
# ansible runs
curl -s https://finelli.pub/36FDA306.asc | pacman-key -a -
pacman-key --lsign-key C3CD75B002978A8468CA7B1F6C3ADDDE36FDA306
echo '[supermario]' >> /etc/pacman.conf
# shellcheck disable=SC2016
echo 'Server = https://pkgs.finelli.dev/arch/$arch' >> /etc/pacman.conf
pacman -Syyu

# can't have a baby without a name
read -rp "What's the new hostname? " NEW_HOSTNAME
echo "$NEW_HOSTNAME" > /etc/hostname

pacman -S efibootmgr btrfs-progs dosfstools ntfs-3g e2fsprogs exfat-utils \
  f2fs-tools os-prober lvm2 cryptsetup mdadm usbutils elfutils

AMD=AuthenticAMD
INTEL=GenuineIntel
if [[ $(lscpu | grep -m1 Vendor\ ID | awk '{print $3}') == "$INTEL" ]]; then
  pacman -S intel-ucode
elif [[ $(lscpu | grep -m1 Vendor\ ID | awk '{print $3}') == "$AMD" ]]; then
  pacman -S amd-ucode
fi

# construct the kernel parameters required for booting with lvm on luks
# https://wiki.archlinux.org/title/Dm-crypt/Encrypting_an_entire_system#LVM_on_LUKS
# https://wiki.archlinux.org/title/Dm-crypt/System_configuration#Kernel_parameters
LUKSDEVICE="$(blkid -s UUID -o value /dev/disk/by-partlabel/CRYPTROOT)"
echo -n 'kernel_cmdline="rd.luks.name=' > /etc/dracut.conf.d/cmdline.conf
echo -n "${LUKSDEVICE}=crypt rd.lvm.lv=crypt/root rd.lvm.lv=crypt/swap " \
  >> /etc/dracut.conf.d/cmdline.conf
echo 'root=/dev/mapper/crypt-root rootfstype=btrfs rootflags=rw"' \
  >> /etc/dracut.conf.d/cmdline.conf

# we need to pass an explicit kernel version because the installed kernel may
# be different than the kernel that we booted with using the install medium
dracut --uefi --kver "$(ls /usr/lib/modules/ | head -n1)"
bootctl install

# the rest of the system gets installed/configured using ansible
pacman -S ansible git pyalpm ansible-gpg-key-git vim

exit 0
