#!/bin/bash

set -e

sudo timedatectl set-ntp true
sudo hostnamectl set-hostname $(cat /etc/hostname)

# http://stackoverflow.com/a/17695543
function prompt_yesno() {
    read -p "$1 "
    case $(echo $REPLY | tr '[A-Z]' '[a-z]') in
        y|yes) echo "yes" ;;
        *)     echo "no" ;;
    esac
}

WORKDIR=$(mktemp -d)

for package in pikaur; do
    cd $WORKDIR
    wget https://aur.archlinux.org/cgit/aur.git/snapshot/$package.tar.gz
    tar -zxvf $package.tar.gz
    cd $package && makepkg
    sudo pacman -U $(ls *.tar.xz)
done

cd
rm -rf $WORKDIR

pikaur -S reflector namcap pkgfile rsync pacutils
sudo pkgfile --update

# only download from https mirrors
sudo reflector --verbose -l 100 -p https --sort rate \
    --save /etc/pacman.d/mirrorlist

pikaur -Syyu

PACMAN_TMP=$(mktemp)

# add ILoveCandy configuration option to end of first block of [option]s
# adapted from: http://stackoverflow.com/a/16102492
awk '
  $0 == "[options]" { inOptions = 1 }
  inOptions && $0 == "" {
    print "ILoveCandy"
    inOptions = 0
  }
  1' /etc/pacman.conf > $PACMAN_TMP

sudo mv $PACMAN_TMP /etc/pacman.conf
sudo chown root:root /etc/pacman.conf
sudo chmod 644 /etc/pacman.conf

for item in Color VerbosePkgLists; do
  PACMAN_TMP=$(mktemp)
  sed "/#${item}/s/^#//" /etc/pacman.conf > $PACMAN_TMP
  sudo mv $PACMAN_TMP /etc/pacman.conf
  sudo chown root:root /etc/pacman.conf
  sudo chmod 644 /etc/pacman.conf
done

MAKEPKG_TMP=$(mktemp)
read -p "How many cores to use when compiling packages from source? "
CORES=$((REPLY + 1))
sed "/MAKEFLAGS=\"/s/-j[0-9]/-j$CORES/;/MAKEFLAGS=\"/s/^#//" \
    /etc/makepkg.conf > $MAKEPKG_TMP
sudo mv $MAKEPKG_TMP /etc/makepkg.conf
sudo chown root:root /etc/makepkg.conf
sudo chmod 644 /etc/makepkg.conf

pikaur -S xterm kalu
pikaur -S xcursor-openzone
pikaur -S ttf-{liberation,symbola} gnu-free-fonts \
    ttf-{linux-libertine,google-fonts-git,carlito,caladea} \
    otf-{fira-sans,fira-mono} noto-fonts-emoji

pikaur -S xfce-theme-{manager,greybird,bluebird,albatross,blackbird} \
    shimmer-wallpapers elementary-{xfce-icons,icon-theme} \
    paper-{gtk,icon}-theme-git

if [[ "yes" == $(prompt_yesno "Install bluetooth packages?") ]]; then
    pikaur -S bluez{,-utils} blueman pulseaudio-bluetooth
    sudo systemctl enable bluetooth
    gsettings set org.blueman.transfer shared-path /home/`whoami`/Downloads
fi

gpg --keyserver keys.gnupg.net --recv-keys 2012EA22 # 1password
pikaur -S keepass xsel spideroak-one dropbox keybase kbfs 1password{,-cli}

if [[ "yes" == $(prompt_yesno "Install libreoffice?") ]]; then
    pikaur -S libreoffice-fresh{-de,-es,-fr,-it} hunspell-en_{AU,CA,GB,US} \
        hunspell-{de,es,fr,it} hyphen-{de,en,es,fr,it} \
        mythes{,-de,-en,-es,-fr,-it}
fi

if [[ "yes" == $(prompt_yesno "Install the GIMP?") ]]; then
    GIMP_INSTALL=true
    pikaur -S gimp{,-extras} gimp-plugin-resynthesizer-git
else
    GIMP_INSTALL=false
fi

if [[ "yes" == $(prompt_yesno "Install scanning software?") ]]; then
    if [[ $GIMP_INSTALL == true ]]; then
        pikaur -S sane xsane xsane-gimp
    else
        pikaur -S sane xsane
    fi
fi

if [[ "yes" == $(prompt_yesno "Install graphics software?") ]]; then
    pikaur -S shotwell dia dcraw inkscape
fi

if [[ "yes" == $(prompt_yesno "Install chat programs?") ]]; then
    pikaur -S pidgin purple-plugin-pack aspell-{de,en,es,fr,it} \
        pidgin-otr hexchat
fi

if [[ "yes" == $(prompt_yesno "Install thunderbird?") ]]; then
    pikaur -S thunderbird thunderbird-i18n-{de,en-us,es-es,fr,it} \
        thunderbird-extension-enigmail
fi

if [[ "yes" == $(prompt_yesno "Install cli email tools?") ]]; then
    pikaur -S mutt isync msmtp lynx vim-spell-{de,en,es,fr,it}
fi

if [[ "yes" == $(prompt_yesno "Install tor browser bundle?") ]]; then
    gpg --auto-key-locate nodefault,wkd --locate-keys torbrowser@torproject.org
    pikaur -S tor-browser
fi

pikaur -S file-roller snapper archey-git grub-customizer colordiff \
    cfv tmux tmuxp p7zip htop pwgen unrar cdrkit

pikaur -S moreutils dos2unix ripgrep
pikaur -S tldr thefuck
pikaur -S dnsutils net-tools nmap geo-bash whois
pikaur -S wmuc
pikaur -S jq go-yq vivid

pikaur -S imagemagick ghostscript

pikaur -S chromium
pikaur -S deluge vlc youtube-dl
pikaur -S libdvdcss libaacs

if [[ "yes" == $(prompt_yesno "Install google chrome?") ]]; then
    pikaur -S google-chrome
fi

if [[ "yes" == $(prompt_yesno "Install latex packages?") ]]; then
    pikaur -S texlive-most texlive-lang
fi

for package in sublime-text-dev gummi phpstorm rubymine; do
    if [[ "yes" == $(prompt_yesno "Install $package?") ]]; then
        pikaur -S $package
    fi
done

echo "Wine on 64bit systems requires the multilib repository."
if [[ "yes" == $(prompt_yesno "Install wine packages?") ]]; then
    pikaur -S wine wine-mono wine_gecko winetricks
    pikaur -S lib32-{libpulse,alsa-plugins}

    if [[ "yes" == $(prompt_yesno "Install music manipulation programs?") ]]
    then
        pikaur -S foobar2000 mp3tag musicbrainz picard
    fi
fi

for package in vinagre handbrake cksfv calibre spotify audacity; do
    if [[ "yes" == $(prompt_yesno "Install $package?") ]]; then
        pikaur -S $package
    fi
done

pikaur -S redshift python-xdg

if [[ "yes" == $(prompt_yesno "Install printing packages?") ]]; then
    pikaur -S cups cups-pdf gutenprint foomatic-db{,-engine,-nonfree} \
        hplip splix

    if [[ "yes" == $(prompt_yesno "Install packages for network printing?") ]]
    then
        pikaur -S avahi samba
        sudo systemctl enable avahi-daemon.service
    fi

    sudo systemctl enable org.cups.cupsd.service
fi

if [[ "yes" == $(prompt_yesno "Install gnucash?") ]]; then
    pikaur -S gnucash{,-docs}
    pikaur -S perl-{finance-quote,date-manip,libwww,lwp-protocol-https}
fi

if [[ "yes" == $(prompt_yesno "Install zsh?") ]]; then
    pikaur -S zsh grml-zsh-config zsh-syntax-highlighting zsh-completions
fi

if [[ "yes" == $(prompt_yesno "Install fish?") ]]; then
    pikaur -S fish
fi

pikaur -S okular

if [[ "yes" == $(prompt_yesno "Install MariaDB?") ]]; then
    pikaur -S mariadb
    sudo mysql_install_db --user=mysql --basedir=/usr --datadir=/var/lib/mysql

    MARIADB_TMP=$(mktemp)
    awk '
      $0 == "[mysqld]" { inMysqld = 1 }
      inMysqld && $0 == "" {
        print "collation-server = utf8mb4_unicode_ci"
        print "character-set-server = utf8mb4"
        inMysqld = 0
      }
      1' /etc/mysql/my.cnf > $MARIADB_TMP
    sudo mv $MARIADB_TMP /etc/mysql/my.cnf
    sudo chown root:root /etc/mysql/my.cnf
    sudo chmod 644 /etc/mysql/my.cnf
fi

if [[ "yes" == $(prompt_yesno "Install PostreSQL?") ]]; then
  pikaur -S postgresql
  sudo -u postgres initdb --locale en_US.utf8 -E UTF8 \
    -D '/var/lib/postgres/data'
fi

if [[ "yes" == $(prompt_yesno "Install PHP?") ]]; then
    pikaur -S php php-{gd,apcu,geoip,intl,tidy} composer xdebug

    for extension in curl exif gd iconv intl mysqli pdo_mysql tidy zip; do
        PHP_TMP=$(mktemp)
        sed "/extension=$extension.so/s/^;//" /etc/php/php.ini > $PHP_TMP

        sudo mv $PHP_TMP /etc/php/php.ini
        sudo chown root:root /etc/php/php.ini
        sudo chmod 644 /etc/php/php.ini
    done

    PHP_TMP=$(mktemp)
    sed "/zend_extension=opcache.so/s/^;//" /etc/php/php.ini > $PHP_TMP

    sudo mv $PHP_TMP /etc/php/php.ini
    sudo chown root:root /etc/php/php.ini
    sudo chmod 644 /etc/php/php.ini

    PHP_TMP=$(mktemp)
    awk '{print} $0 == ";date.timezone =" { print "date.timezone = UTC" }' \
        /etc/php/php.ini > $PHP_TMP

    sudo mv $PHP_TMP /etc/php/php.ini
    sudo chown root:root /etc/php/php.ini
    sudo chmod 644 /etc/php/php.ini

    pikaur -S php-imagick

    gpg --keyserver pgp.mit.edu --recv-keys 41515FE8
    pikaur -S php-box
fi

if [[ "yes" == $(prompt_yesno "Install redis?") ]]; then
    pikaur -S redis
fi

if [[ "yes" == $(prompt_yesno "Install nodejs packages?") ]]; then
    pikaur -S nodejs npm
    pikaur -S nodejs-{foundation-cli,pug-cli}
fi

if [[ "yes" == $(prompt_yesno "Install ruby packages?") ]]; then
    pikaur -S ruby{,-rake,-rdoc,-bundler,-install,-pry} chruby{,-fish}
fi

if [[ "yes" == $(prompt_yesno "Intall virtualbox?") ]]; then
    pikaur -S virtualbox{,-host-modules-arch,-guest-iso}

    if [[ "yes" == $(prompt_yesno "Install vagrant?") ]]; then
        pikaur -S vagrant
    fi
fi

for package in jpegoptim postfix beanstalkd memcached shellcheck; do
    if [[ "yes" == $(prompt_yesno "Install $package?") ]]; then
        pikaur -S $package
    fi
done

if [[ "yes" == $(prompt_yesno "Install cloud cli utilities?") ]]; then
    pikaur -S aws-cli python-boto python-boto3 python-magic
    pikaur -S google-cloud-sdk doctl
    pikaur -S github-cli
fi

if [[ "yes" == $(prompt_yesno "Install extra python packages?") ]]; then
    pikaur -S yapf python-{pytest,sqlparse}
fi

if [[ "yes" == $(prompt_yesno "Install ansible?") ]]; then
    pikaur -S ansible ansible-lint python-passlib sshpass
fi

if [[ "yes" == $(prompt_yesno "Install go?") ]]; then
    pikaur -S go{,-tools} delve
fi

if [[ "yes" == $(prompt_yesno "Install nim?") ]]; then
    pikaur -S nim{,ble}
fi

if [[ "yes" == $(prompt_yesno "Install devops tools?") ]]; then
    pikaur -S terraform graphviz packer
    pikaur -S kops kubectl minikube-bin kubesec kubectx
    pikaur -S docker
fi

for package in firefox-developer-edition backblaze-b2-git ngrok ffsend; do
    if [[ "yes" == $(prompt_yesno "Install $package?") ]]; then
        pikaur -S $package
    fi
done

if [[ "yes" == $(prompt_yesno "Install git notes tools?") ]]; then
    pikaur -S git-crypt jgit
fi

if [[ "yes" == $(prompt_yesno "Install aws workspace client?") ]]; then
    pikaur -S amazon-workspacesclient
fi

# if we don't have a java runtime yet, install java 8
command -v java >/dev/null 2>&1 || { \
  pikaur -S jre8-openjdk jdk8-openjdk; }
