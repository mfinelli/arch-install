#!/bin/bash

set -e

sudo timedatectl set-ntp true
sudo hostnamectl set-hostname $(cat /etc/hostname)

# http://stackoverflow.com/a/17695543
function prompt_yesno() {
    read -p "$1 "
    case $(echo $REPLY | tr '[A-Z]' '[a-z]') in
        y|yes) echo "yes" ;;
        *)     echo "no" ;;
    esac
}

WORKDIR=$(mktemp -d)

# falconindy key for cower
gpg --keyserver pgp.mit.edu --recv-keys 1EB2638FF56C0C53

for package in cower pacaur; do
    cd $WORKDIR
    wget https://aur.archlinux.org/cgit/aur.git/snapshot/$package.tar.gz
    tar -zxvf $package.tar.gz
    cd $package && makepkg
    sudo pacman -U $(ls *.tar.xz)
done

cd
rm -rf $WORKDIR

pacaur -S yaourt reflector namcap pkgfile rsync asp pacutils pikaur
sudo pkgfile --update

# only download from https mirrors
sudo reflector --verbose -l 100 -p https --sort rate \
    --save /etc/pacman.d/mirrorlist

pacaur -Syyu

PACMAN_TMP=$(mktemp)

# add ILoveCandy configuration option to end of first block of [option]s
# adapted from: http://stackoverflow.com/a/16102492
awk '
  $0 == "[options]" { inOptions = 1 }
  inOptions && $0 == "" {
    print "ILoveCandy"
    inOptions = 0
  }
  1' /etc/pacman.conf > $PACMAN_TMP

sudo mv $PACMAN_TMP /etc/pacman.conf
sudo chown root:root /etc/pacman.conf
sudo chmod 644 /etc/pacman.conf

for item in Color VerbosePkgLists; do
  PACMAN_TMP=$(mktemp)
  sed "/#${item}/s/^#//" /etc/pacman.conf > $PACMAN_TMP
  sudo mv $PACMAN_TMP /etc/pacman.conf
  sudo chown root:root /etc/pacman.conf
  sudo chmod 644 /etc/pacman.conf
done

MAKEPKG_TMP=$(mktemp)
read -p "How many cores to use when compiling packages from source? "
CORES=$((REPLY + 1))
sed "/MAKEFLAGS=\"/s/-j[0-9]/-j$CORES/;/MAKEFLAGS=\"/s/^#//" \
    /etc/makepkg.conf > $MAKEPKG_TMP
sudo mv $MAKEPKG_TMP /etc/makepkg.conf
sudo chown root:root /etc/makepkg.conf
sudo chmod 644 /etc/makepkg.conf

pacaur -S xterm kalu
pacaur -S xcursor-openzone
pacaur -S ttf-{liberation,freefont,symbola} \
    ttf-{linux-libertine,google-fonts-git,carlito,caladea} \
    otf-{fira-sans,fira-mono} noto-fonts-emoji

pacaur -S xfce-theme-{manager,greybird,bluebird,albatross,blackbird} \
    shimmer-wallpapers elementary-{xfce-icons,icon-theme} \
    paper-{gtk,icon}-theme-git

if [[ "yes" == $(prompt_yesno "Install bluetooth packages?") ]]; then
    pacaur -S bluez{,-utils} blueman pulseaudio-bluetooth
    sudo systemctl enable bluetooth
    gsettings set org.blueman.transfer shared-path /home/`whoami`/Downloads
fi

pacaur -S keepass xsel spideroak-one dropbox

pacaur -S libreoffice-fresh{-de,-es,-fr,-it} hunspell-{de,en,es,fr,it} \
    hyphen-{de,en,es,fr,it} mythes{,-de,-en,-es,-fr,-it}

if [[ "yes" == $(prompt_yesno "Install the GIMP?") ]]; then
    GIMP_INSTALL=true
    pacaur -S gimp{,-extras} \
        gimp-plugin-{resynthesizer-git,saveforweb,exif-browser} \
        gimp-script-{descreen,smart-remove} gimp-fourier
else
    GIMP_INSTALL=false
fi

if [[ "yes" == $(prompt_yesno "Install scanning software?") ]]; then
    if [[ $GIMP_INSTALL == true ]]; then
        pacaur -S sane xsane xsane-gimp
    else
        pacaur -S sane xsane
    fi
fi

pacaur -S shotwell dia dcraw inkscape

pacaur -S pidgin purple-plugin-pack aspell-{de,en,es,fr,it} pidgin-otr hexchat

if [[ "yes" == $(prompt_yesno "Install thunderbird?") ]]; then
    pacaur -S thunderbird thunderbird-i18n-{de,en-us,es-es,fr,it}

    if [[ "yes" == $(prompt_yesno "Install enigmail for thunderbird?") ]]
    then
        gpg --keyserver pgp.mit.edu --recv-keys 9369CDF3 DD5F693B
        pacaur -S thunderbird-enigmail
    fi
fi

pacaur -S mutt isync msmtp lynx vim-spell-{de,en,es,fr,it}

if [[ "yes" == $(prompt_yesno "Install tor browser bundle?") ]]; then
    gpg --keyserver pgp.mit.edu --recv-keys D40814E0
    pacaur -S tor-browser-en
fi

pacaur -S file-roller snapper archey-git grub-customizer colordiff \
    cfv tmux tmuxp p7zip htop pwgen unrar cdrkit

pacaur -S moreutils dos2unix ripgrep
pacaur -S tldr thefuck
pacaur -S dnsutils net-tools nmap geo-bash whois
pacaur -S ferm

pacaur -S imagemagick ghostscript

pacaur -S chromium
pacaur -S deluge vlc youtube-dl
pacaur -S libdvdcss libaacs

pacaur -S guake

if [[ "yes" == $(prompt_yesno "Install google chrome?") ]]; then
    pacaur -S google-chrome
fi

pacaur -S texlive-most texlive-lang

for package in sublime-text-dev gummi phpstorm rubymine postman-bin; do
    if [[ "yes" == $(prompt_yesno "Install $package?") ]]; then
        pacaur -S $package
    fi
done

echo "Wine on 64bit systems requires the multilib repository."
if [[ "yes" == $(prompt_yesno "Install wine packages?") ]]; then
    pacaur -S wine wine-mono wine_gecko winetricks
    pacaur -S lib32-{libpulse,alsa-plugins}

    if [[ "yes" == $(prompt_yesno "Install music manipulation programs?") ]]
    then
        pacaur -S foobar2000 mp3tag musicbrainz picard
    fi
fi

for package in vinagre handbrake cksfv calibre spotify; do
    if [[ "yes" == $(prompt_yesno "Install $package?") ]]; then
        pacaur -S $package
    fi
done

pacaur -S redshift python-xdg

if [[ "yes" == $(prompt_yesno "Install printing packages?") ]]; then
    pacaur -S cups cups-pdf gutenprint foomatic-db{,-engine,-nonfree} \
        hplip splix

    if [[ "yes" == $(prompt_yesno "Install packages for network printing?") ]]
    then
        pacaur -S avahi samba
        sudo systemctl enable avahi-daemon.service
    fi

    sudo systemctl enable org.cups.cupsd.service
fi

pacaur -S gnucash{,-docs}
pacaur -S perl-{finance-quote,date-manip,libwww,lwp-protocol-https}

if [[ "yes" == $(prompt_yesno "Install zsh?") ]]; then
    pacaur -S zsh grml-zsh-config zsh-syntax-highlighting zsh-completions
fi

pacaur -S bash-completion

pacaur -S okular

if [[ "yes" == $(prompt_yesno "Install MariaDB?") ]]; then
    pacaur -S mariadb
    sudo mysql_install_db --user=mysql --basedir=/usr --datadir=/var/lib/mysql

    MARIADB_TMP=$(mktemp)
    awk '
      $0 == "[mysqld]" { inMysqld = 1 }
      inMysqld && $0 == "" {
        print "collation-server = utf8mb4_unicode_ci"
        print "character-set-server = utf8mb4"
        inMysqld = 0
      }
      1' /etc/mysql/my.cnf > $MARIADB_TMP
    sudo mv $MARIADB_TMP /etc/mysql/my.cnf
    sudo chown root:root /etc/mysql/my.cnf
    sudo chmod 644 /etc/mysql/my.cnf
fi

if [[ "yes" == $(prompt_yesno "Install PostreSQL?") ]]; then
  pacaur -S postgresql
  sudo -u postgres initdb --locale en_US.utf8 -E UTF8 \
    -D '/var/lib/postgres/data'
fi

if [[ "yes" == $(prompt_yesno "Install PHP?") ]]; then
    pacaur -S php php-{gd,apcu,geoip,intl,tidy} composer xdebug

    for extension in curl exif gd iconv intl mysqli pdo_mysql tidy zip; do
        PHP_TMP=$(mktemp)
        sed "/extension=$extension.so/s/^;//" /etc/php/php.ini > $PHP_TMP

        sudo mv $PHP_TMP /etc/php/php.ini
        sudo chown root:root /etc/php/php.ini
        sudo chmod 644 /etc/php/php.ini
    done

    PHP_TMP=$(mktemp)
    sed "/zend_extension=opcache.so/s/^;//" /etc/php/php.ini > $PHP_TMP

    sudo mv $PHP_TMP /etc/php/php.ini
    sudo chown root:root /etc/php/php.ini
    sudo chmod 644 /etc/php/php.ini

    PHP_TMP=$(mktemp)
    awk '{print} $0 == ";date.timezone =" { print "date.timezone = UTC" }' \
        /etc/php/php.ini > $PHP_TMP

    sudo mv $PHP_TMP /etc/php/php.ini
    sudo chown root:root /etc/php/php.ini
    sudo chmod 644 /etc/php/php.ini

    pacaur -S php-imagick

    gpg --keyserver pgp.mit.edu --recv-keys 41515FE8
    pacaur -S php-box phpunit
fi

if [[ "yes" == $(prompt_yesno "Install redis?") ]]; then
    pacaur -S redis
fi

if [[ "yes" == $(prompt_yesno "Install nodejs packages?") ]]; then
    pacaur -S nodejs npm bower gulp uglify-js eslint coffee-script yarn
    pacaur -S nodejs-{uglifycss,sequelize-cli,mocha,knex,babel,webpack} \
        nodejs-{bunyan,foundation-cli,handlebars,pug-cli,ember-cli,vue-cli}
    pacaur -S phantomjs
    pacaur -S stylelint yamllint
fi

if [[ "yes" == $(prompt_yesno "Install ruby packages?") ]]; then
    pacaur -S ruby{,-rake,-rdoc,-bundler,-rubocop,-install,-pry} chruby

    if [[ "yes" == $(prompt_yesno "Install ruby css tools?") ]]; then
        pacaur -S ruby-{sass,scss_lint}
    fi
fi

if [[ "yes" == $(prompt_yesno "Intall virtualbox?") ]]; then
    pacaur -S virtualbox{,-host-modules-arch,-guest-iso}

    if [[ "yes" == $(prompt_yesno "Install vagrant?") ]]; then
        pacaur -S vagrant
    fi
fi

pacaur -S jpegoptim
pacaur -S postfix
pacaur -S beanstalkd
pacaur -S memcached
pacaur -S shellcheck

pacaur -S s3cmd aws-cli python{,2}-boto python-boto3 python{,2}-magic
pacaur -S google-cloud-sdk

pacaur -S yapf
pacaur -S python-pytest
pacaur -S python-sqlparse

if [[ "yes" == $(prompt_yesno "Install ansible?") ]]; then
    pacaur -S ansible ansible-lint python{,2}-passlib sshpass
fi

if [[ "yes" == $(prompt_yesno "Install puppet tools?") ]]; then
    pacaur -S puppet puppet-lint
fi

if [[ "yes" == $(prompt_yesno "Install go?") ]]; then
    pacaur -S go{,-tools} glide
fi

pacaur -S terraform graphviz
pacaur -S kops kubernetes minikube-bin kubesec
pacaur -S poedit
pacaur -S audacity

pacaur -S backblaze-b2-git
pacaur -S git-crypt jgit
pacaur -S ngrok
pacaur -S docker

# if we don't have a java runtime yet, install java 8
command -v java >/dev/null 2>&1 || { \
  pacaur -S jre8-openjdk; }
